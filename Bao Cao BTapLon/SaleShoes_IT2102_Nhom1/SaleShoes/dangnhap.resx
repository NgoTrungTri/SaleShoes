<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAALpJREFUWEftkssNwjAQBXMHbtAPUAGUg7gAJUEfUArfK4J5VnxBCcZkIxGxI40U
        J+v1s53C6SIj3OAeb6V6XuMQW2WOZ3zUeMIZtoIWv6MW2uIYe6UT3KG+qcY8hI497nyhFzUsUTVHNL0O
        3XnceYp4EqswMuKAaqpjTzFF1erHNOOKatoPo/cMULWXMDJCDeWn5NYn+c8AsYmV2VQ1aWI2X098wQN4
        AA/gATxA9wNYmU1VkyY6v0hRPAFz/LCvyCzbvAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAa5JREFUWEftlctKHEEUQMeNIlFRiPoJuhUhLmNCcBXy8IG/IRIRdaWuoi7MT0h2
        ScxnhGi2iogf4CsPAhqNnlN0Qy9mnExPNUToA2dxb9+6NVVd1VMpKbmP9OEq7uKvxB1cwV4slEn8gTc1
        /I7jWAhO/hed6AM+xgeJo/gRfXaNrzEqbnu68jkTNZhHa87xoYlY+M7TlddjG61dDlEkvqFN3fZ6PEFr
        PZjR+Ik27QjR3XSitb6yaJzhv/6ALrT2NESR+Io29bTX4yla+yVEkVhCm3rV6vEZrV0IUST68QRt7FWr
        hZNac4xe3aj4cblCJ/Cqedo9E+q2pyu35hUWwgT6pXOiavrMmkJ4gQdYbeKs1jzHaLTgOmYnOcIBbE8c
        THLpc/8z3qJjm2YDbfoHFzE9jJvo4dR3Sc7D542x1ngNm8LDZKNLfGYC/Lu9QPNZzaWHbwwdY/6liTy0
        YbqtsyYyjKA3wRXrJ3yEWd6gYw+x1USjTKMN9jDPu3TMPtpjykSjvEcHz4QoH+6cPbZC1CBunYOHQpSP
        YbSHV7NhfqODu0OUjx60h71KSv5HKpVbDi2JGGAFJcAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAEgAAAHEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAIAAADJAAAA/wAAAI8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMAAAD6AAAA/wAA
        AI8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFMAAAD6AAAA/wAAAI8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAI0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMAAAD6AAAA/wAAAI8AAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTAAAA+gAAAP8AAACPAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAgAAAMkAAAD/AAAAjwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAEgAAAHEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////8AAD//AAA//z//P/8//z//P/8//z//P/8//z//P
        /8//zn/P/8w/z//+H8///w/P+AAHz/gAB8///wfP//4Pz//MP8//zn/P/8//z//P/8//z//P/8//z//P
        /8//z//P/8AAD//AAA////////////////8=
</value>
  </data>
</root>